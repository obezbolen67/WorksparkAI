// src/types/index.ts

export type Attachment = {
  _id: string; 
  fileName: string;
  gcsObjectName: string;
  mimeType: string;
  size: number;
};

// Represents a file generated by the code interpreter
export type FileOutput = {
  fileName: string;
  mimeType: string;
  url: string; // A direct, signed URL to the file in cloud storage
  gcsObjectName?: string; // Stored in DB, available on loaded chats
};

export type Message = {
  // --- START OF FIX: Added new tool roles ---
  role: 'user' | 'assistant' | 'tool_code_result' | 'tool_code' | 'tool_search_result' | 'tool_search' | 'tool_doc_extract' | 'tool_doc_extract_result' | 'tool_geolocation' | 'tool_geolocation_result';
  // --- END OF FIX ---
  content: string | null;
  attachments?: Attachment[];
  tool_id?: string;
  state?: 'writing' | 'ready_to_execute' | 'executing' | 'completed' | 'error' | 'searching' | 'searched' | 'analyzing' | null;
  thinking?: string;
  fileOutputs?: FileOutput[];
  isWaiting?: boolean;
  // --- START OF FIX: Added property for client-side tools ---
  isClientSideTool?: boolean;
  // --- END OF FIX ---
};


// Represents a geographical point with an address for Google Maps
type MapLocation = {
  lat: number;
  lng: number;
  address: string;
};

// Represents the rectangular bounds of a map view
type MapBounds = {
  southwest: { lat: number; lng: number; };
  northeast: { lat: number; lng: number; };
};

/**
 * Represents the data structure for the Google Maps directions integration.
 * This is typically generated by a server-side tool call.
 */
export type GoogleMapsData = {
  start: MapLocation;
  end: MapLocation;
  bounds: MapBounds;
  polyline: string; // The encoded polyline string from Google Directions API
};