/* src/css/ChatView.css */

.chat-view-container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  width: 100%;
  overflow: hidden;
  background-color: var(--main-bg-color);
  /* 
    --- Animation & Layout Variables ---
    These variables control the "empty chat" layout and animation.
  */
  /* Controls how high the input is in an empty chat. 45vh is slightly above center. */
  --empty-chat-input-position-bottom: 45vh; 
  /* Controls the speed of the layout transition */
  --chat-layout-transition-duration: 0.6s;
  /* Controls the easing of the layout transition */
  --chat-layout-transition-timing: cubic-bezier(0.4, 0, 0.2, 1);
}

.chat-view-header {
  display: flex;
  justify-content: center;
  padding: 1rem;
  flex-shrink: 0;
  z-index: 5;
}

.chat-view {
  flex-grow: 1;
  position: relative; /* This is the anchor for the absolute-positioned input area */
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

/* --- UPDATED: Making the fade less prominent --- */
.chat-view::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  /* Reduced height to make the fade area smaller */
  height: 100px; 
  /* Adjusted gradient to make the solid part smaller and the fade more subtle */
  background: linear-gradient(to top, var(--main-bg-color) 20%, transparent 100%);
  pointer-events: none; /* Allows clicks and scrolling to pass through */
  z-index: 4; /* Position it just below the input area */
}


.loading-overlay {
  position: absolute;
  inset: 0;
  background-color: hsla(240, 5%, 13%, 0.7);
  backdrop-filter: blur(4px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 10;
  opacity: 0;
  animation: fadeIn 0.3s ease forwards;
}

.chat-content {
  width: 100%;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  flex-grow: 1; /* The scrollable area should take up all available space. */
  /* Add padding to prevent the last message from being hidden by the input area */
  padding-bottom: 150px; /* A generous value to clear the input area */
  box-sizing: border-box;
}

.chat-messages-list {
  padding: 1rem 0;
}

/* --- UPDATED: Styles for the "empty chat" message --- */
.empty-chat-container {
  text-align: center;
  margin-bottom: 1.5rem; /* The fixed gap between the text and the input box */
}

/* --- NEW: Hide the "empty chat" message when there are messages --- */
.chat-view-container:not(.is-empty) .empty-chat-container {
  display: none;
}

.empty-chat-container h1 {
  font-size: 1.8rem;
  font-weight: 400;
  color: var(--primary-text-color);
  margin: 0;
  opacity: 0;
  transform: translateY(15px);
  transition: opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1), transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

.chat-view-container.is-ready.is-empty .empty-chat-container h1 {
  opacity: 1;
  transform: translateY(0);
  transition-delay: 0.1s;
}

/* --- UPDATED: The chat input area is now a flex container --- */
.chat-input-area {
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0; /* Aligned to the bottom of its relative parent (.chat-view) */
  
  /* Flexbox properties to stack the h1 and the ChatInput component */
  display: flex;
  flex-direction: column;
  align-items: center; /* Centers the ChatInput component horizontally */
  
  width: 100%;
  max-width: 800px;
  padding: 1rem 0 2rem 0;
  box-sizing: border-box;
  margin: 0 auto;
  z-index: 5;

  opacity: 0;
  transform: translateY(0); /* Default position is at the bottom */
  
  transition: opacity 0.5s cubic-bezier(0.4, 0, 0.2, 1),
              transform var(--chat-layout-transition-duration) var(--chat-layout-transition-timing);
}

.chat-view-container.is-ready .chat-input-area {
  opacity: 1;
  transition-delay: 0.2s, 0s; /* Delay opacity animation, but not transform */
}

/* When the chat is empty, translate the entire input area upwards */
.chat-view-container.is-empty .chat-input-area {
  transform: translateY(calc(-1 * var(--empty-chat-input-position-bottom)));
}

.scroll-to-bottom {
  position: absolute;
  bottom: 100%; /* Position above the input area */
  left: 50%;
  z-index: 10;
  margin-bottom: 0.75rem; /* Space between button and input box */
  
  display: flex;
  align-items: center;
  justify-content: center;
  width: 38px;
  height: 38px;
  
  background-color: var(--main-bg-color); 
  border: 1px solid var(--border-color);
  color: var(--primary-text-color);
  border-radius: 50%;
  cursor: pointer;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.25);
  
  opacity: 0;
  transform: translateX(-50%) translateY(10px);
  animation: fadeInBottomButton 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards;
  transition: background-color 0.2s ease, transform 0.2s ease;
}

.scroll-to-bottom:hover {
  background-color: var(--border-color);
  transform: translateX(-50%) translateY(-2px);
}

.scroll-to-bottom svg {
  width: 22px;
  height: 22px;
}

@keyframes fadeInBottomButton {
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

@media (max-width: 768px) {
  .chat-view-header {
    display: none;
  }
  
  /* --- On mobile, use a solid bar instead of a gradient --- */
  .chat-view::after {
      display: none;
  }

  .chat-view-container:not(.is-empty) .chat-input-area {
    position: fixed;
    background-color: var(--main-bg-color);
    border-top: 1px solid var(--border-color);
    padding: 0.5rem 1rem max(1rem, env(safe-area-inset-bottom));
    max-width: none;
    transform: translateY(0) !important;
  }
  
  .chat-content {
    padding-bottom: 100px;
  }
  
  .chat-input-area {
    max-width: none;
    padding: 0.5rem 1rem 1rem 1rem;
  }
}